@page "/"
@using ZooManager
<style>

    button {
        width: 75px;
        height: 75px;
        font-size: 50px;
    }

        button.sm {
            display: inline-flex;
            width: 50px;
            height: 50px;
            justify-content: center;
            align-items: center;
            font-size:20px;
        }

    .blocked {
        background-color: mediumvioletred;
    }
</style>
<div class="container">
    <div class="turn-count">
        <h1>Turn(s): @turnCount</h1>
    </div>
    @if (Game.gameEnd)
    {
        <div class="end-message">
            @if (Game.gameWin)
            {
                <h1>You Win The Game!</h1>
                <p>Press Y to Restart the game, and press N to end the game</p>
            }
            else
            {
                <h1>You Lose The Game!</h1>
                <p>Press Y to Restart the game, and press N to end the game</p>
            }
        </div>
    }
    <div class="row">
        <div class="col">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <h1 style="text-align:end">Add to Holding:</h1>
        </div>
        <div class="col-1">
            <button @onclick="@(() => Game.AddToHolding("cat"))"
                    type="button" class="sm btn btn-outline-dark">
                <h2>🐱</h2>
            </button>
        </div>
        <div class="col-1">
            <button @onclick="@(() => Game.AddToHolding("snake"))"
                    type="button" class="sm btn btn-outline-dark">
                <h2>🐍</h2>
            </button>
        </div>

        <div class="col-1">
            <button @onclick="@(() => Game.AddToHolding("grass"))"
                    type="button" class="sm btn btn-outline-dark">
                <h2>🌾</h2>
            </button>
        </div>
        <div class="col-1">
            <button @onclick="@(() => Game.AddToHolding("boulder"))"
                    type="button" class="sm btn btn-outline-dark">
                <h2>🪨</h2>
            </button>
        </div>

    </div>
    <div class="row">
        <div class="col">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <h1 style="text-align:end">Holding Pen:</h1>
        </div><div class="col-6">
            <button disabled type="button" class="btn btn-outline-dark">
                <h2>@Game.holdingPen.emoji<sup>@Game.holdingPen.rtLabel</sup></h2>
            </button>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col">
            <table align="center">
                @for (var y = 0; y < Game.numCellsY; y++)
                {
                    <tr>
                        @for (var x = 0; x < Game.numCellsX; x++)
                        {
                            var zone = Game.animalZones[y][x];
                            string blockedClass = zone.IsBlocked ? "blocked" : "";
                            <td>
                                <button @onclick="@(() => OnZoneClick(zone))"
                                        type="button" class="btn btn-outline-dark @blockedClass">
                                    @if (zone.occupant != null)
                                    {
                                        <h2>@zone.emoji</h2>
                                    }
                                    else
                                    {
                                        <h2></h2>
                                    }
                                </button>
                            </td>
                        }
                    </tr>
                }
            </table>
        </div>
    </div>
</div>

@code {
    public int turnCount = 0;

    protected override void OnInitialized()
    {
        Game.SetUpGame();
    }

    private void OnZoneClick(Zone zone)
    {
        if (!Game.gameEnd)
        {
            Game.ZoneClick(zone);
            IncrementTurnCount();
        }
    }

    private void IncrementTurnCount()
    {
        turnCount++;
        Game.turnCount = turnCount; 
        StateHasChanged();
    }

    private void OnKeyPress(KeyboardEventArgs e)
    {
        if (Game.gameEnd)
        {
            if (e.Key == "y" || e.Key == "Y")
            {
                Game.resetGame();
                Console.WriteLine("Game Loading...");

            }
            else if (e.Key == "n" || e.Key == "N")
            {
                Game.endGame();
                Console.WriteLine("GOOD GAME!");

            }
        }
    }
}
